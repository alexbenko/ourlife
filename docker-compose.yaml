version: "3"
services:
  postgres:
    image: alexbenko/ourlife_db:latest
    ports:
      - "5432:5432"
    volumes:
       - ./postgres-data:/var/lib/postgresql/data
       - ./backups:/backups

  redis:
    image: redis:7.0-rc2-bullseye
    container_name: store
    ports:
      - '6379:6379'
    logging:
      driver: none

  app:
    image: alexbenko/ourlife_server:latest
    depends_on:
      - postgres
      - redis
    volumes:
      - ./static:/dist/static
      - ./logs:/dist/logs
      - ./backups:/dist/backups
    environment:
      REDIS_URL: redis://store
      PORT: 8080
      NODE_ENV: production
    ports:
      - "8080:8080"
    command: npm start
    restart: unless-stopped

  nginx:
    image: nginx:1.15-alpine
    depends_on:
      - app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    restart: unless-stopped
    # every 6 hours reload nginx config file and ssl certs
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"


  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - nginx
    # every 12 hours, per recomendation of lets encrypt, check if certs are valid
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"